RAW HTML FOR: http://blogs.cisco.com/security/extracting-exe-drop-malware
<!DOCTYPE html>
<html lang="eng-US" xmlns:nitro="https://www.bunchball.com/nitro">
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>  Extracting EXE Drop Malware</title>
	<meta property="og:image" content="https://blogs.cisco.com/wp-content/themes/cisco_brand/images/Cisco_Logo_RGB-2color_92x52.gif"/>
	<meta property="og:site_name" content="blogs@Cisco - Cisco Blogs"/> <meta property="og:description" content=""/>
	<meta name="google-site-verification" content="9MlQU9MMQ1jHLMUkONKe6QzZ-ZIGRv0BCD1_rY1Zdmc" /> 
		<meta name="bitly-verification" content="25789e2a57d8"/>
	<meta name="accessLevel" content="GUEST, CUSTOMER, PARTNER"/>
	<meta name="language" content="en"/>
	<meta name="country" content="US"/>
	<meta name="contentType" content="ciscoBlogs"/>
			<meta name="docType" content="blogPost" />
		<link rel="stylesheet" href="http://blogs.cisco.com/wp-content/themes/cisco_responsive/style.css" type="text/css" media="screen" />
	<link rel="alternate" type="application/rss+xml" title="Cisco Blog RSS Feed" href="http://blogs.cisco.com/feed" />
	<link rel="shortcut icon" href="http://blogs.cisco.com/wp-content/themes/cisco_responsive/favicon.ico" />
	<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
	
	<link rel='dns-prefetch' href='//www.cisco.com' />
<link rel='dns-prefetch' href='//platform.twitter.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="Cisco Blog &raquo; Extracting EXE Drop Malware Comments Feed" href="http://blogs.cisco.com/security/extracting-exe-drop-malware/feed" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/svg\/","svgExt":".svg","source":{"wpemoji":"http:\/\/blogs.cisco.com\/wp-includes\/js\/wp-emoji.js?ver=4.7.2","twemoji":"http:\/\/blogs.cisco.com\/wp-includes\/js\/twemoji.js?ver=4.7.2"}};
			( function( window, document, settings ) {
	var src, ready, ii, tests;

	/*
	 * Create a canvas element for testing native browser support
	 * of emoji.
	 */
	var canvas = document.createElement( 'canvas' );
	var context = canvas.getContext && canvas.getContext( '2d' );

	/**
	 * Detect if the browser supports rendering emoji or flag emoji. Flag emoji are a single glyph
	 * made of two characters, so some browsers (notably, Firefox OS X) don't support them.
	 *
	 * @since 4.2.0
	 *
	 * @param type {String} Whether to test for support of "flag" or "emoji4" emoji.
	 * @return {Boolean} True if the browser can render emoji, false if it cannot.
	 */
	function browserSupportsEmoji( type ) {
		var stringFromCharCode = String.fromCharCode,
			flag, flag2, technologist, technologist2;

		if ( ! context || ! context.fillText ) {
			return false;
		}

		// Cleanup from previous test.
		context.clearRect( 0, 0, canvas.width, canvas.height );

		/*
		 * Chrome on OS X added native emoji rendering in M41. Unfortunately,
		 * it doesn't work when the font is bolder than 500 weight. So, we
		 * check for bold rendering support to avoid invisible emoji in Chrome.
		 */
		context.textBaseline = 'top';
		context.font = '600 32px Arial';

		switch ( type ) {
			case 'flag':
				/*
				 * This works because the image will be one of three things:
				 * - Two empty squares, if the browser doesn't render emoji
				 * - Two squares with 'U' and 'N' in them, if the browser doesn't render flag emoji
				 * - The United Nations flag
				 *
				 * The first two will encode to small images (1-2KB data URLs), the third will encode
				 * to a larger image (4-5KB data URL).
				 */
				context.fillText( stringFromCharCode( 55356, 56826, 55356, 56819 ), 0, 0 );
				if ( canvas.toDataURL().length < 3000 ) {
					return false;
				}

				context.clearRect( 0, 0, canvas.width, canvas.height );

				/*
				 * Test for rainbow flag compatibility. As the rainbow flag was added out of sequence with
				 * the usual Unicode release cycle, some browsers support it, and some don't, even if their
				 * Unicode support is up to date.
				 *
				 * To test for support, we try to render it, and compare the rendering to how it would look if
				 * the browser doesn't render it correctly (white flag emoji + rainbow emoji).
				 */
				context.fillText( stringFromCharCode( 55356, 57331, 65039, 8205, 55356, 57096 ), 0, 0 );
				flag = canvas.toDataURL();

				context.clearRect( 0, 0, canvas.width, canvas.height );

				context.fillText( stringFromCharCode( 55356, 57331, 55356, 57096 ), 0, 0 );
				flag2 = canvas.toDataURL();

				return flag !== flag2;
			case 'emoji4':
				/*
				 * Emoji 4 has the best technologists. So does WordPress!
				 *
				 * To test for support, try to render a new emoji (woman technologist: medium skin tone),
				 * then compare it to how it would look if the browser doesn't render it correctly
				 * (woman technologist: medium skin tone + personal computer).
				 */
				context.fillText( stringFromCharCode( 55357, 56425, 55356, 57341, 8205, 55357, 56507), 0, 0 );
				technologist = canvas.toDataURL();

				context.clearRect( 0, 0, canvas.width, canvas.height );

				context.fillText( stringFromCharCode( 55357, 56425, 55356, 57341, 55357, 56507), 0, 0 );
				technologist2 = canvas.toDataURL();

				return technologist !== technologist2;
		}

		return false;
	}

	function addScript( src ) {
		var script = document.createElement( 'script' );

		script.src = src;
		script.defer = script.type = 'text/javascript';
		document.getElementsByTagName( 'head' )[0].appendChild( script );
	}

	tests = Array( 'flag', 'emoji4' );

	settings.supports = {
		everything: true,
		everythingExceptFlag: true
	};

	for( ii = 0; ii < tests.length; ii++ ) {
		settings.supports[ tests[ ii ] ] = browserSupportsEmoji( tests[ ii ] );

		settings.supports.everything = settings.supports.everything && settings.supports[ tests[ ii ] ];

		if ( 'flag' !== tests[ ii ] ) {
			settings.supports.everythingExceptFlag = settings.supports.everythingExceptFlag && settings.supports[ tests[ ii ] ];
		}
	}

	settings.supports.everythingExceptFlag = settings.supports.everythingExceptFlag && ! settings.supports.flag;

	settings.DOMReady = false;
	settings.readyCallback = function() {
		settings.DOMReady = true;
	};

	if ( ! settings.supports.everything ) {
		ready = function() {
			settings.readyCallback();
		};

		if ( document.addEventListener ) {
			document.addEventListener( 'DOMContentLoaded', ready, false );
			window.addEventListener( 'load', ready, false );
		} else {
			window.attachEvent( 'onload', ready );
			document.attachEvent( 'onreadystatechange', function() {
				if ( 'complete' === document.readyState ) {
					settings.readyCallback();
				}
			} );
		}

		src = settings.source || {};

		if ( src.concatemoji ) {
			addScript( src.concatemoji );
		} else if ( src.wpemoji && src.twemoji ) {
			addScript( src.twemoji );
			addScript( src.wpemoji );
		}
	}

} )( window, document, window._wpemojiSettings );
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='css-css'  href='http://blogs.cisco.com/wp-content/plugins/bunchball/bunchball.css?ver=4.7.2' type='text/css' media='all' />
<link rel='stylesheet' id='normalize-css'  href='http://blogs.cisco.com/wp-content/themes/cisco_responsive/normalize.css?ver=4.7.2' type='text/css' media='all' />
<link rel='stylesheet' id='slidebarsstyle-css'  href='http://blogs.cisco.com/wp-content/themes/cisco_responsive/slidebars.css?ver=4.7.2' type='text/css' media='all' />
<link rel='stylesheet' id='single-css'  href='http://blogs.cisco.com/wp-content/themes/cisco_responsive/styles/single.css?ver=4.7.2' type='text/css' media='all' />
<script type='text/javascript' src='http://blogs.cisco.com/wp-includes/js/jquery/jquery.js?ver=1.12.4'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-includes/js/jquery/jquery-migrate.js?ver=1.4.1'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/plugins/bunchball/bunchball.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/plugins/bunchball/jquery.cookie.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/plugins/bunchball/jquery.slimscroll.min.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/plugins/bunchball/moment.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/plugins/bunchball/livestamp.min.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/themes/cisco_responsive/js/modernizr.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/themes/cisco_responsive/js/slidebars.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/themes/cisco_responsive/js/jquery.lazyload.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/themes/cisco_responsive/js/theme_script.js?ver=4.7.2'></script>
<script type='text/javascript' src='https://www.cisco.com/assets/swa/j/blogs.js?ver=4.7.2'></script>
<script type='text/javascript' src='https://www.cisco.com/web/fw/m/metrics.min.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/themes/cisco_responsive/js/jquery.tools.min.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/themes/cisco_responsive/js/jquery.tipTip.minified.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-content/themes/cisco_responsive/js/jquery.sharrre.min.js?ver=4.7.2'></script>
<script type='text/javascript' src='https://platform.twitter.com/widgets.js?ver=4.7.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://blogs.cisco.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://blogs.cisco.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Grow Your Business with the New Partner Readiness and Support eBook' href='http://blogs.cisco.com/partner/grow-your-business-with-the-new-partner-readiness-and-support-ebook' />
<link rel='next' title='VSG: Vive la difference! A Tutorial for HP' href='http://blogs.cisco.com/datacenter/vsg-vive-la-difference-a-tutorial-for-hp' />

<link rel="canonical" href="http://blogs.cisco.com/security/extracting-exe-drop-malware" />
<link rel='shortlink' href='http://blogs.cisco.com/?p=38237' />
	

</head>
<body>
	<div id = "rewards_fix"></div>
	<script src="//assets.bunchball.net/scripts/nitro/current/nitro.js" type="text/javascript"></script>	<script>
		var apiKey = "6912c6c82ccc4863a0311dc8b586b8fb";
		var userId = "anon";
		var time = "1487271777";
		var sig = "f460769c19a02fd6107da96192ee3b7d";
		var connectionParams={};
    		connectionParams.apiKey = apiKey ;
    		connectionParams.timeStamp = time;
    		connectionParams.signature = sig;
    		connectionParams.server =  "//CiscoSupportCommunities2.nitro.bunchball.net/nitro/json/";
    		connectionParams.userId = userId;   
    	var nitro = new Nitro(connectionParams); 
    	nitro.showPendingNotifications();	  
	</script> <header class = "sb-slide">
        <div id = "hero">
            <div class = "top_third">
                <div id="hamburger" class = "sb-open-left">
                    <i class="fa fa-bars"></i>
                </div>
            </div>
            <div class = "top_third">
                <div id = "cisco_logo">
                    <div class="dropdown">
                        <div class = "logo_hover"></div>
                        <div class="dropdown-content">
                            <ul>
                                <li><a href = "https://cisco.com">All of Cisco</a></li>
                                <li><a href = "http://blogs.cisco.com">Blogs Home</a></li>
                            </ul>
                         </div>
                    </div>
                </div>
            </div>
            <div class = "hero_header_text">Cisco Blogs</div>
                <div id = "mobile_search_top">
                    <i class="fa fa-search"></i>
                </div>

                <a class = "top_login" href = "https://blogs.cisco.com:9031/sp/startSSO.ping?PartnerIdpId=cloudsso.cisco.com">Log In to Cisco.com</a>
                
                <div id = "normal_search">
                    <div id = "normal_search_box"><form method="get" id="searchform" action="http://blogs.cisco.com/"> 
	<input type="text" value="" 
    	name="s" id="s"> 
    </input>
<input type="submit" value=" " class="searchSubmit"/>
</form></div>
                        <i class="fa fa-search"></i>
                    <div class = "clear"></div>
                </div>
            <div class = "clear"></div>
            <div id = "normal_menu">
                <nav>
  <a class = "hamburger_login" href = "https://blogs.cisco.com:9031/sp/startSSO.ping?PartnerIdpId=cloudsso.cisco.com">Log In to Cisco.com</a>      <ul>
                  <li><a href='http://blogs.cisco.com'><span>All Blogs</span></a></li>
                  <li><a href='#'><span>Technologies</span></a>
                  <ul>
            <div class = "bordertop"></div>
            <li><a href="http://blogs.cisco.com/analytics-automation">Analytics &amp; Automation</a></li>
            <li><a href="http://blogs.cisco.com/cloud">Cloud</a></li>
            <li><a href='http://blogs.cisco.com/collaboration'>Collaboration</a></li>
            <li><a href='http://blogs.cisco.com/datacenter'>Data Center</a></li>
            <li><a href='http://blogs.cisco.com/enterprise'>Enterprise Networks</a></li>
            <li><a href='http://blogs.cisco.com/innovation'>Innovation</a></li>
            <!--<li><a href='http://blogs.cisco.com/openatcisco'>Open at Cisco</a></li>-->
            <li><a href='http://blogs.cisco.com/wireless'>Mobility</a></li>
            <li><a href='http://blogs.cisco.com/security'>Security</a></li>
            <li class = "sub"><a href="http://blogs.cisco.com/talos" class="nav_menu" title="">Threat Research</a></li>
            <li><a href='http://blogs.cisco.com/smallbusiness'>Small Business</a></li>
            <li><a href='http://blogs.cisco.com/sp'>SP360:Service Provider</a></li>
          </ul>
        </li>
                  <li><a href='#'><span>Industries</span></a>
                    
          <ul>
            <div class = "bordertop"></div>
            <li><a href='http://blogs.cisco.com/education'>Education</a></li>
            <li><a href='http://blogs.cisco.com/energy'>Energy</a></li>
            <li><a href='http://blogs.cisco.com/financialservices'>Financial Services</a></li>
            <li><a href='http://blogs.cisco.com/government'>Government</a></li>
            <li><a href='http://blogs.cisco.com/healthcare'>Healthcare</a></li>
            <li><a href='http://blogs.cisco.com/manufacturing'>Manufacturing</a></li>
            <li><a href='http://blogs.cisco.com/retail'>Retail &amp; Hospitality</a></li>
          </ul>
        </li>
                  <li><a href='#'><span>Partners</span></a>         
          <ul>
            <div class = "bordertop"></div>
            <li><a href='http://blogs.cisco.com/partner'>Partner</a></li>
          </ul>
        </li>
        <li><a href='#'><span>For the Tech Expert</span></a>           <ul>
            <div class = "bordertop"></div>
            <li><a href='http://blogs.cisco.com/getyourbuildon'>Architects &amp; Distinguished Engineers</a></li>
            <li><a href='http://blogs.cisco.com/performance'>High Performance Computing</a></li>
            <li><a href='http://blogs.cisco.com/ciscoit'>Inside Cisco IT</a></li>
            <li><a href='http://blogs.cisco.com/cin'>TechWiseTV</a></li>
          </ul>
        </li>
         <li><a href='#'><span>Get to Know Cisco</span></a>           <ul>
            <div class = "bordertop"></div>
            <li><a href='http://blogs.cisco.com/csr'>Corporate Social Responsibility</a></li>
            <li><a href='http://blogs.cisco.com/cle'>Connected Life Exchange</a></li>
            <li><a href='http://blogs.cisco.com/socialmedia'>Digital and Social Media</a></li>
            <li><a href='http://blogs.cisco.com/digital'>Digital Transformation</a></li>
            <li><a href='http://blogs.cisco.com/emerging'>Emerging Countries</a></li>
            <li><a href='http://blogs.cisco.com/gov'>High Tech Policy</a></li>
            <li><a href='http://blogs.cisco.com/diversity'>Inclusion and Diversity</a></li>
            <li><a href='http://blogs.cisco.com/lifeatcisco'>Life at Cisco</a></li>
            <li><a href='http://blogs.cisco.com/perspectives'>Perspectives</a></li>
            <li><a href='http://blogs.cisco.com/news'>The Platform (News &amp; Exec Insights)</a></li>
          </ul>
        </li>
        <li class = "countries"><a href='#'><span>Countries and Regions</span></a>
          <ul>
            <div class = "col_1">
  <li><a href="https://apjc.thecisconetwork.com/">Asia Pacific</a>
    <li><a href="http://gblogs.cisco.com/at/">Austria</a>
  <li><span class = "sub_main">Belgium</span></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/be">Dutch</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/be-fr">French</a></li>
  <li><span class = "sub_main">Canada</span></li>
    <li class = "sub"><a href="http://canadablog.cisco.com/">English</a></li>
    <li class = "sub"><a href="http://ciscocanadafr.wordpress.com/">French</a></li>
  <li><a href="http://gblogs.cisco.com/fin/">Finland</a>
  </div>
    <div class = "col_2">
  <li><span class = "sub_main">France</a></span>
    <li class = "sub"><a href="http://www.cisco.com/c/m/fr_fr/socialmedia/blogs.html">Cisco France Blogs</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-reseaux/">R&#233;seaux</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-datacenter/">Data Center &amp; Cloud</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-iot/">Digital Transformation &amp; IoT</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-collaboration/">Collaboration</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-security/">S&eacute;curit&eacute;</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-sp/">Service Provider</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-smartcities/">Smart Cities</a></li>
  
  <li><a href="http://gblogs.cisco.com/de">Germany</a></li>
  <li><a href="http://gblogs.cisco.com/in">India</a></li>
  </div>
  <div class = "col_3">
  <li><a href="http://gblogs.cisco.com/it/">Italy</a></li>   
  <li><a href="http://gblogs.cisco.com/jp/">Japan</a></li>
  <li><a href="http://ciscokrblog.com/">Korea</a></li>
  <li><span class = "sub_main">Latin America</span></li>
      <li class = "sub"><a href="http://gblogs.cisco.com/la/">Latin America (Esp)</a></li>
      <li class = "sub"><a href="http://gblogs.cisco.com/cansac/">Cansac</a></li> 
  </div>
  <div class = "col_4">  
  <li><a href="https://ciscotechblog.nl/">Netherlands</a></li>
  <li><a href="http://gblogs.cisco.com/no">Norway</a></li>
  <li><a href="http://gblogs.cisco.com/pl">Poland</a></li>
  <li><a href="http://gblogs.cisco.com/pt">Portugal</a></li>
  <li><a href="http://gblogs.cisco.com/ro">Romania</a></li>
  <li><a href="http://gblogs.cisco.com/ru">Russia</a></li>
  <li><a href="http://gblogs.cisco.com/es">Spain</a></li>
  <li><a href="http://gblogs.cisco.com/ch-tech/">Switzerland</a></li>
  <li><a href="http://gblogs.cisco.com/uki/">UK &amp; Ireland</a></li>
</div>
<div class = "clear"></div>
</ul>
</li>
      </ul>
</nav>            </div>
            <div id = "mobile_search">
                <div id = "mobile_search_box">
                    <form method="get" id="searchform" action="http://blogs.cisco.com/"> 
	<input type="text" value="" 
    	name="s" id="s"> 
    </input>
<input type="submit" value=" " class="searchSubmit"/>
</form>                </div>
        </div>
        </div>  
    </header>
     
         

  <div id="share_bar1">
    
    <span class = "share_title">Share</span>
    <div class="twitter" ><a href="https://twitter.com/intent/tweet?url=http://bit.ly/1FaG4jz&text=Extracting EXE Drop Malware&via=ciscosecurity">tweet</a></div>
    <div class="facebook" data-url="http://blogs.cisco.com/security/extracting-exe-drop-malware" data-title=" "></div>
    <div class="googleplus" data-url="http://blogs.cisco.com/security/extracting-exe-drop-malware"data-title=" "></div>
    <div class="linkedin" data-url="http://blogs.cisco.com/security/extracting-exe-drop-malware" data-title=" "></div>
        <div class = "share_mail"><a class="email" href="mailto:?subject=Cisco Blog: Extracting EXE Drop Malware&body=I saw this post on Cisco Security blog and thought you might like to read it.%0A%0AExtracting EXE Drop Malware%0A%0Ahttp://blogs.cisco.com/security/extracting-exe-drop-malware%0A%0A****Disclaimer****%0A%0ACisco is not responsible for the content of this email, and its contents do not necessarily reflect Cisco’s views or opinions. Cisco has not verified the email address or name of the sender."></a></div>
    <div class = "clear"></div>
  </div>
  <script>
    jQuery(document).ready(function($){



      
      $('.facebook').sharrre({
        share: {
          facebook: true
        },
        enableHover: false,
        enableTracking: true,
        click: function(api, options){
          api.simulateClick();
          api.openPopup('facebook');
        }
      });
      $('.googleplus').sharrre({
        share: {
          googlePlus: true
        },
        enableHover: false,
        enableTracking: true,
        urlCurl: '/wp-content/themes/cisco_responsive/sharrre.php',
        click: function(api, options){
          api.simulateClick();
          api.openPopup('googlePlus');
        }
      });
      $('.linkedin').sharrre({
        share: {
          linkedin: true
        },
        enableHover: false,
        enableTracking: true,
        click: function(api, options){
          api.simulateClick();
          api.openPopup('linkedin');
        }
      });

    });
  </script>
  <div id="sb-site">
<div id = "main_content">
	
	<div id = "blog_content">
	<div id = "main_left">

		<article id = "article_post">
			<p class = "breadcrumb">
			<a href=' http://blogs.cisco.com'>Cisco Blog</a> > <a href=' http://blogs.cisco.com/category/security/'>Security</a></p>				
					<div id = "post_image"><img src = "/wp-content/uploads/category50.png">  					</div>
  					<div id = "post_info">
  						<span class = "post_category">
  							Security  						</span>
						<h1 id="post-38237" class="kindle_title title">Extracting EXE Drop Malware</h1>
						<div class="author_image"><img class = " img-circle" src = "http://blogs.cisco.com/wp-content/uploads/userphoto/NeilArchibald.thumbnail.4cb6284c187bb.jpg"></div><div class="author_rewards_box"></div><div class = "clear"></div><span class = "list_author"><a href="http://blogs.cisco.com/author/NeilArchibald" title="Posts by Neil Archibald" rel="author">Neil Archibald</a> - July 27, 2011 - 3 Comments      					</span>
      					<br />
      					<br />
      										</div>
					<div class ="clear"></div>
					<p>In the last few years there has been a major shift in the vulnerability landscape from a focus on attacking network-based server applications to attacking client applications using malicious file formats. Due to this shift there has been a variety of new techniques developed by attackers for more reliable control post-exploitation.</p>
<p>One of the techniques that is commonly used by attackers is the EXE drop. Basically this technique revolves around placing an executable file within the data format in which the vulnerability takes place. Post exploitation, the payload searches for the file descriptor that is associated with the data file, copies the EXE file from it to disk, and executes the EXE file in a new process. Some examples of data formats that are commonly used in an EXE drop exploit are Office documents, Shockwave Flash Files, and image files. The EXE drop technique is useful for several reasons; one reason is because it makes coding the payload easier. The executable can be crafted quickly and compiled for a specific target. Also, by copying an executable file to disk (persistent storage) it&#8217;s fairly easy to maintain residency by adding an entry to the autorun registry keys for example.</p>
<p><span id="more-38237"></span></p>
<p>From a malware analyst&#8217;s perspective, in order to understand what the piece of malware utilizing the EXE drop technique does, the executable file must be extracted from the data file before it can be analyzed. There are many ways this can be accomplished, in this blog post we will look at a couple.</p>
<p>The first method we will look at is to statically scan the data file in order to find the executable within. Then parse the executable to determine the file size and extract it to disk. The advantage of doing this statically is that we do not need to execute and exploit the vulnerable application in order to extract the executable for further analysis. We can implement this functionality in a Python script.</p>
<p>To extract the executable file from the data file we first need to find its starting location. An easy way to find the starting location is to use the <a href="http://code.google.com/p/yara-project/" target="_blank">YARA library</a>. The YARA library was designed to make it easier for Malware analysts to perform pattern matching on large files. YARA can be run as a standalone executable, as a Python library (which is useful for automation), and more recently as a Ruby port (yara-ruby).</p>
<p>YARA works by parsing a text-based rule and testing the file for the conditions present. This allows a malware analyst to specify multiple strings that are contained within a file, and test for the presence of any/all/or certain combinations of them. Here is an example of a sample YARA rule taken from the <a href="http://code.google.com/p/yara-project/" target="_blank">YARA website</a>.<br />
<code></p>
<pre>rule silent_banker : banker
{
    meta:
        description = "This is just an example"
        thread_level = 3
        in_the_wild = true

    strings:
        $a = {6A 40 68 00 30 00 00 6A 14 8D 91}
        $b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}
        $c = "UVODFRYSIHLNWPEJXQZAKCBGMT"

    condition:
        $a or $b or $c
}</pre>
<p></code><br />
To create a YARA rule to match an executable file we must first understand what exactly it is that we need to match. This technique is most common with malware written for Microsoft Windows. Because of this, we will focus on extracting executable files of the Portable Executable (PE) binary format, the object format that is used on this platform. The PE file format dictates that the first part of data we find in the executable file is the MS-DOS stub (MZ image) beginning with the <a href="http://www.fileformat.info/format/exe/corion-mz.htm" target="_blank">MZ header</a>. This mandatory stub exists only for backwards compatibility reasons. The MZ header specifies the size of the MS-DOS stub, and where to find the PE header afterwards. When the Windows loader parses the file, it simply pulls the offset to the PE header from the MZ header and begins loading. However, if the same file was to be executed on an MS-DOS system, which doesn’t understand the PE file format, the MZ image would be loaded and executed instead. Microsoft‘s modern linker utilizes this functionality by inserting a standard MZ image, which does nothing but outputs the string “This program cannot be run in DOS mode” and exits. A large portion of malware authors use Microsoft’s linker to generate their file drop payloads, therefore we can use this string to find a large percentage of the cases.</p>
<p>To search for this string in our input files from within our Python script we can craft the following YARA rule:<br />
<code></p>
<pre>srch = """
rule exe_drop
{
	strings:
		$a  = "This program cannot be run in DOS mode"
	condition:
		all of them
}
""</pre>
<p></code><br />
Using the YARA library from within Python is a very straightforward task. You simply import the YARA library into the Python namespace, specify a rule as a Python string, and pass it into the compile method of the YARA class as the source attribute. The code shown below accomplishes this with our newly created rule “srch”:<br />
<code></p>
<pre>Import yara
rules = yara.compile(source=srch)</pre>
<p></code><br />
Now that we have created a compiled version of the rule, we need to run it against our data file. This is simply a case of invoking the match method as so:</p>
<p><code>matches = rules.match(argv[1])</code></p>
<p>This method returns a matches object. One of the attributes of this object is the strings table. The table consists of a multi-dimentional array with an entry for each of the matches in the file. Each item in the array contains the offset to the match, followed by the variable name from the rule that matches, and then the string content of the match itself. An example of this is:</p>
<p><code>[(78, '$a', 'This program cannot be run in DOS mode')]</code></p>
<p>By dereferencing this array we can get the first piece of information that we require. This is the offset in the data file to the string that is inside the MZ portion of the PE file. Since this is a specific string taken straight from Microsoft’s linker, and the MZ portion of the file has remained the same for years, we can take a static offset from this string to the start of the file. This value is 78. The following code will result in locating the start of the PE file in the data file.</p>
<p><code>globals()['MZSIZE'] = 78<br />
offset = matches[0].strings[0][0] - MZSIZE # offset in file to start of MZ header</code></p>
<p>Now that we’ve located the beginning of the PE file within the data file we need to calculate its length in order to extract it. To do this we need to understand a little about the layout of a PE file. The diagram below explains the structure of a PE file.</p>
<p><a href="http://blogs.cisco.com/security/extracting-exe-drop-malware/attachment/na-pefile/" rel="attachment wp-att-38239"><img src="http://blogs.cisco.com/wp-content/uploads/na-pefile-300x386.png" alt="" title="na-pefile" width="300" height="386" class="alignright size-medium wp-image-38239" srcset="http://blogs.cisco.com/wp-content/uploads/na-pefile-300x386.png 300w, http://blogs.cisco.com/wp-content/uploads/na-pefile.png 507w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>In this diagram we can see the structural overview of a PE file. As you can see the file begins with the MZ header, as mentioned earlier. Following this is the actual instructions and data tables of the MZ MS-DOS file itself. Next the PE headers are found (COFF header, Optional header), these contain meta-data information related to the PE contents such as the architecture type, number of sections in the section table, and time stamp information. Following the PE headers we find the section table. This is a table of structures that is designed to describe the remainder of the file. Each entry in the table describes a portion of the file (section) and tells how to map it into memory. Since this table describes the entire remainder of the file, it also allows us to determine the total size of the file, and ultimately determine our file offset to extract the file.</p>
<p>To parse our PE file we can utilize the <a href="http://code.google.com/p/pefile/" target="_blank"><em>pefile</em> Python library</a>. This library provides a cross-platform way to dissect the PE file and nicely organize the information. Prior to invoking the <em>pefile</em> library we can create a mapping of our executable file. This will save us having to open the file multiple times and perform reads into a temporary buffer. To do this we can use the cross-platform <em>mmap</em> library.</p>
<p>To use the <em>mmap</em> library, we just open the file for read in binary mode (‘r+b’). Then we call the <em>mmap</em> method on the file handle number that is associated with our python file object. The second argument to the <em>mmap</em> function is used to indicate how large of a mapping needs to be created. The value 0 is used to indicate to <em>mmap</em> that the entire contents of the file should be mapped. The code below shows this.</p>
<p><code>import mmap</p>
<p>fp = open(argv[1],'r+b')<br />
map = mmap.mmap(fp.fileno(),0)</code></p>
<p>Now that we have created the mapping we can use <em>pefile</em> to begin parsing. This is a simple process that consists of calling the PE method of the <em>pefile</em> class and passing in the portion of the map starting at the offset we determined earlier. Unfortunately we don’t know the end offset of the file so we have to leave it blank and read to the end of the data. The following code implements this.</p>
<p><code># parse with pe<br />
pe = pefile.PE(data=map[offset:])</code></p>
<p>Once the <em>pefile</em> library has finished parsing our embedded executable file, we can begin walking the section table to find the end of the file.<br />
Each entry in the section table is of type <a href="http://msdn.microsoft.com/en-us/library/ms680341(v=vs.85).aspx" target="_blank">IMAGE_SECTION_HEADER</a>, this structure is shown below.<br />
<code></p>
<pre>typedef struct _IMAGE_SECTION_HEADER {
  BYTE  Name[IMAGE_SIZEOF_SHORT_NAME];
  union {
    DWORD PhysicalAddress;
    DWORD VirtualSize;
  } Misc;
  DWORD VirtualAddress;
  DWORD SizeOfRawData;
  DWORD PointerToRawData;
  DWORD PointerToRelocations;
  DWORD PointerToLinenumbers;
  WORD  NumberOfRelocations;
  WORD  NumberOfLinenumbers;
  DWORD Characteristics;
} IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;</pre>
<p></code><br />
The two attributes of this structure that we are concerned with are the PointerToRawData, which is the file offset of the start of the section, and SizeofRawData, which is the size on disk of the section. By adding these two values together we can find the maximum offset of the file. With this in mind, finding the file size is simply a case of walking through the table and keeping track of the highest file offset that we see. Once we’ve finished traversing the table, this should leave us with the size of the file. The function below implements this.<br />
<code></p>
<pre>def get_filesize(pe):
	largest = 0
	for section in pe.sections:
		addr = section.PointerToRawData + section.SizeOfRawData
		if(addr &gt; largest):
			largest = addr
		# end if
	# end for
	return largest
# end get_filesize</pre>
<p></code><br />
Now that we have the starting offset of the file and the file size, we can extract the executable file from the data. Since we already have the file mapped, this is an easy case of specifying the offsets to the mapping to extract the data. First, however, we need to come up with a name for the file. The most useful method that I can see for this is to hash the contents so that we have a unique identifier. The easiest way to hash the contents is to use python’s built-in MD5 library. The code below imports the library and instantiates it. The code then calls the update method to add the executable file’s data to be hashed. Finally the hex digest method is called to generate an MD5 hash in ASCII readable format.<br />
<code></p>
<pre>	Import md5
	# md5 the exe for storage purposes
	m = md5.new()
	m.update(map[offset:offset+file_size])
	exefilename = m.hexdigest() + ".exe"</pre>
<p></code><br />
The final step in our python script is to write the file to disk, obviously we can do this in a few trivial lines of python. All we need to do is open the file with the filename that we created and write from the mapping we created, into the file.<br />
<code></p>
<pre>	ofp = open(exefilename,"wb+")
	ofp.write(map[offset:offset+file_size])
	ofp.close()</pre>
<p></code><br />
With this completed, all that’s left is to test the script. The output below shows a trial run of the script against some Microsoft Office EXE drop malware. As you can see, an executable file was extracted using its MD5 checksum as the filename.<br />
<code></p>
<pre>C:\Users\neil\Desktop\pyexedump&gt;pyexedump.py
usage: C:\Users\neil\Desktop\pyexedump\pyexedump.py 

C:\Users\neil\Desktop\pyexedump&gt;pyexedump.py malware.doc
[+] Matching data file: malware.doc
[+] Found file drop EXE at offset: 0x5de
[+] Mapping PE file.
[+] Size of PE file: 0x1c1e00 bytes.
[+] Writing out exe file to: 9399f501214bec3808eb87a5c6780d30.exe.

C:\Users\neil\Desktop\pyexedump&gt;dir 9399f501214bec3808eb87a5c6780d30.exe
 Directory of C:\Users\neil\Desktop\pyexedump

06/26/2011  02:14 PM         1,842,688 9399f501214bec3808eb87a5c6780d30.exe
               1 File(s)      1,842,688 bytes
               0 Dir(s)  207,376,134,144 bytes free</pre>
<p></code><br />
As I mentioned at the start of the post, this tool will only work against malware linked with Microsoft’s linker. Malware written with Borland Delphi for example has a complete different MZ file. Also, attackers will sometimes deliberately attempt to evade detection and pack the executable, and then unpack it during shellcode execution. In the future I will attempt to add some ability to investigate shellcode with <em>libemu</em> and mitigate this before the tool begins the extraction process; however, for now, we will look at an easy way to extract the executable file in these cases.</p>
<p>Rather than approaching this problem statically, it can make sense to actually load the data file and trigger the exploit. By allowing exploitation to occur, the executable file is dropped to disk where it can be retrieved. Clearly this should be done in a virtual machine, so as not to infect your actual machine. To assist in the purpose of collecting the dropped executable file it can be useful to use a sandbox program such as <a href="http://www.sandboxie.com" target="_blank">Sandboxie</a>. Sandboxie is similar to a UNIX chroot environment. You select a program to run inside the sandbox and it will be restricted to a certain set of resources, instead of having full access to the system. By default Sandboxie will use the path “C:\Sandbox\Administrator\DefaultBox\drive\C” and any file access that the application running inside the sandbox makes will instead be re-routed to this directory. This means that you can clearly see any files dropped by the exploit.</p>
<p>With either of the approaches described in this post the objective is the same, to capture the executable file for further analysis. Hopefully after reading this post, you understand the difference between the two methods described, and advantages and disadvantages of each. I have included a full source code listing of the application described in this post (pyexedump.py below).</p>
<h2>pyexedump.py</h2>
<p><code></p>
<pre>#!/usr/bin/python
# [ pyexedump.py ]
#
# By Neil Archibald
#

import sys
import yara
import pefile
import md5
import mmap

class exedump:
	__srch = """
	rule exe_drop
	{
		strings:
			$a  = "This program cannot be run in DOS mode"
		condition:
			all of them
	}
	"""

	MZSIZE = 78

	def __init__(self, search_file):
		self.__offset = None
		self.__pe = None
		self.__pe_size = None
		self.__map = None
		self.__rules = yara.compile(source=exedump.__srch)
		self.__search_file = search_file
		self.__matches = self.__rules.match(self.__search_file)
	# end __init__

	def __set_pe_size(self):
		largest = 0
		for section in self.__pe.sections:
			addr = section.PointerToRawData + section.SizeOfRawData
			if(addr &gt; largest):
				largest = addr
			# end if
		# end for
		self.__pe_size = largest

	def has_pe(self):
		return (self.__matches and len(self.__matches) != 0)

	def find_pe(self):
		if not self.has_pe():
			return None

		self.__offset = self.__matches[0].strings[0][0] - exedump.MZSIZE # offset in file to start of MZ header
		return self.__offset

	def parse_pe(self):
		if self.__offset == None and self.find_pe() == None:
			return None

		fp = open(self.__search_file,'r+b')
		self.__map = mmap.mmap(fp.fileno(),0)
		fp.close()

		self.__pe = pefile.PE(data=self.__map[self.__offset:])
		self.__set_pe_size()
		self.__map = self.__map[self.__offset:self.__offset + self.__pe_size]	#truncate extra bits
		return self.__pe_size

	def write_pe(self, filename=None):
		if not self.__map:
			return None

		if not filename:
			filename = self.gen_filename()
		fp = open(filename, "wb+")
		fp.write(self.__map)
		fp.close()

		return filename

	def gen_filename(self):
		m = md5.new()
		m.update(self.__map)
		filename = m.hexdigest() + ".exe"
		return filename

	def get_filesize(self):
		if self.__pe_size == None:
			self.__pe_size = self.__set_pe_size()

		return self.__pe_size

# end exedump

def main(argv):

	if(len(argv) != 2):
		print "usage: %s \n" % argv[0]
		sys.exit(1)
	# end if

	ed = exedump(argv[1])
	if not ed.has_pe():
		print "[!] error: no embedded executable file detected"
		sys.exit(1)
	# end if

	print "[+] Searching for embedded EXE file in: %s" % argv[1]

	offset = ed.find_pe()
	print "[+] Found file embedded EXE at offset: 0x%x" % offset

	file_size = ed.parse_pe()
	print "[+] Size of PE file: 0x%x bytes." % file_size

	exefilename = ed.gen_filename()
	print "[+] Writing out exe file to: %s." % exefilename

	ed.write_pe(exefilename)

# end main

if __name__ == "__main__":
	main(sys.argv)
# end if</pre>
<p></code></p>
Tags:<br /><ul class = "tagged"><li><a class = "post_tags" href="http://blogs.cisco.com/?tag=malware">malware</a></li><li><a class = "post_tags" href="http://blogs.cisco.com/?tag=security-2">security</a></li><li><a class = "post_tags" href="http://blogs.cisco.com/?tag=security-research">security research</a></li></ul>			<div id = "comments"> 
				<div id = "respond">
<span class = "comment_heading">Leave a comment</span><br />
<p class="cisco_respond">We'd love to hear from you! To earn points and badges for participating in the conversation, join <a href = "/rewards-about">Cisco Social Rewards</a>. Your comment(s) will appear instantly on the live site. Spam, promotional and derogatory comments will be removed.</p>

 <p class="cisco_respond"><b>All comments in this blog are held for moderation.  Your comment will not display until it has been approved</b></p>
				<p class = "cisco_respond">In an effort to keep conversations fresh, Cisco Blogs closes comments after 60 days. Please visit the <a href ="http://blogs.cisco.com">Cisco Blogs hub page</a> for the latest content.</p>
			<p><span class = "comment_heading">3 Comments</span></p>
		<ol class="commentlist" id="thecomments">
				
			<li>
			<div id="comment-184818">
				<div class="comment_image">
					<img class = "img-circle img-noname" src = 'http://blogs.cisco.com/wp-content/uploads/nitro_image/empty.jpg'  width = "56" height = "56">
				</div>
				<div class="comment_act">
					<div class="comment_user_info">
						<span class="fn">
						John Johnson						</span>
						<br />
						<span class="comment-meta commentmetadata">July 27, 2011 at 5:37 pm</span>
						
					</div>
				<div class="comment_text">
				<p>Excellent post Neild ArchyBald!! I will look for the malicious payload exe's in my companies netowrk now!!!</p>				</div>
				<div class = "roblike">
					<a  href = "#" id = "clickLike184818" class = "commentLikeButton commentlike" data-nitro =>1 like</a>				</div>
				<div class="reply">
									</div>
				
				<div class="clear"></div>
			</div>
			<div class="clear"></div>
		</div>
		</li>
		</li><!-- #comment-## -->

			<li>
			<div id="comment-184877">
				<div class="comment_image">
					<img class = "img-circle img-noname" src = 'http://blogs.cisco.com/wp-content/uploads/nitro_image/empty.jpg'  width = "56" height = "56">
				</div>
				<div class="comment_act">
					<div class="comment_user_info">
						<span class="fn">
						Sawan Gupta						</span>
						<br />
						<span class="comment-meta commentmetadata">July 27, 2011 at 9:17 pm</span>
						
					</div>
				<div class="comment_text">
				<p>Quite Informative Article Neil.</p>				</div>
				<div class = "roblike">
					<a  href = "#" id = "clickLike184877" class = "commentLikeButton commentlike" data-nitro =>1 like</a>				</div>
				<div class="reply">
									</div>
				
				<div class="clear"></div>
			</div>
			<div class="clear"></div>
		</div>
		</li>
		</li><!-- #comment-## -->

			<li>
			<div id="comment-234318">
				<div class="comment_image">
					<img class = "img-circle img-noname" src = 'http://blogs.cisco.com/wp-content/uploads/nitro_image/empty.jpg'  width = "56" height = "56">
				</div>
				<div class="comment_act">
					<div class="comment_user_info">
						<span class="fn">
						Santak						</span>
						<br />
						<span class="comment-meta commentmetadata">September 16, 2011 at 3:39 am</span>
						
					</div>
				<div class="comment_text">
				<p>Thanks for the post, it was really helpful.</p>				</div>
				<div class = "roblike">
					<a  href = "#" id = "clickLike234318" class = "commentLikeButton commentlike" data-nitro = >2 likes</a>				</div>
				<div class="reply">
									</div>
				
				<div class="clear"></div>
			</div>
			<div class="clear"></div>
		</div>
		</li>
		</li><!-- #comment-## -->
			</ol>
	</div>


			</div>
		</article>

	</div>
	<div id = "main_right">
		<ul id = "sidebar">

  <li id="subscribe" class="widget">
    <h3>Subscribe to Security:</h3>
    <div id="subscribe_box">
      <form id ="subscribe_form" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open('https://feedburner.google.com/fb/a/mailverify?uri=CiscoBlogSecurity', 'popupwindow', 'scrollbars=yes,width=550,height=520');return true">
        <input type="text" class="subscribe" name="email" value="Enter email address" onFocus="if(this.value == 'Enter email address') {this.value = '';}" onBlur="if (this.value == '') {this.value = 'Enter email address';}"></input>
        <input type="hidden" value="CiscoBlogSecurity" name="uri" ></input>
        <input type="hidden" name="loc" value="en_US"></input>
        <input type="submit" class="subscribe_button" value="Subscribe" ></input>
        <div class="clear"></div>
      </form>    
    </div>
    <div class="clear"></div>
    
</li>

<li id="social_widget" class="widget">
  <h3>Connect with Security</h3>
  <ul>
        <li><a target='_blank' href="https://www.facebook.com/ciscosecurity?ref=nf"><img src="http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/follow_fb.png" alt="Facebook"></a></li>
    <li><a target='_blank' href="https://twitter.com/ciscosecurity"><img src="http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/follow_tw.png" alt="Twitter"></a></li>
    <li><a target='_blank' href="http://www.linkedin.com/company/cisco"><img src="http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/follow_li.png" alt="Linkedin"></a></li>
    <li><a target='_blank' href="https://plus.google.com/106092229730683979920"><img src="http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/follow_gp.png" alt="Google+"></a></li>
    <li><a target='_blank' href="https://www.slideshare.net/ciscosystems"><img src="http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/follow_ss.png" alt="Slideshare"></a></li>
    <li><a target='_blank' href="http://youtubecisco.com/security"><img src="http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/follow_yt.png" alt="YouTube"></a></li>
    <li><a target='_blank' href=""><img src="http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/follow_ig.png" alt="Instagram"></a></li>
    <li><a href="https://feeds.feedburner.com/CiscoBlogSecurity"><img src="http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/rss.png" width = "24" height = "24" alt = "Rss"></a></li>
      </ul>
</li>
	<li>
		<div id = "nitroLoggedOut" class="widget">
			<div class = "consoleTitle">
				Cisco Social Rewards
			</div>
			<div class = "consoleTextNoLog">
				Get credit for all your Cisco site participation with Social Rewards. <a href = "http://blogs.cisco.com/rewards-about">Learn More</a>			</div>
			<a href = "https://blogs.cisco.com:9031/sp/startSSO.ping?PartnerIdpId=cloudsso.cisco.com" class = "joinNow">Join Today</a>
			<div class = "consoleTextNoLog">
				Already a member?  <a href = "https://blogs.cisco.com:9031/sp/startSSO.ping?PartnerIdpId=cloudsso.cisco.com" class = "already">Log In</a>
			</div>
			</div>	
</li> 	<script>
	
	
	nitro.callAPI("method=site.getActionFeed&apiKey=6912c6c82ccc4863a0311dc8b586b8fb&showLevelChanges=true&preferences=userFullName|profileUrl|userPhotoUrl", "newsfeed");
	</script>
	<li>
		 <div id ="newsfeedWidget">
			<div class = "newsfeed_header">
				Latest Rewards
				<a href = "http://blogs.cisco.com/rewards-about" class = "newsIcon"><img src = "/wp-content/plugins/bunchball/images/infoIcon.png"></a>				
			</div>
			<div id = "newsInnerContent">
				<ul id = "newsfeed">	
				</ul>
			</div>
		</div>
	</li>

<li id="archives" class="widget">
  <div id = "select_content">
    <div id = "archive_title">
      Archives
    </div>
    <div id = "styled_select">
      <select id="archive-dropdown" onChange='document.location.href=this.options[this.selectedIndex].value;'>
        <option value="">Select</option>
        	<option value='http://blogs.cisco.com/archive?year=2017&#038;month=02&#038;cat=50'> February 2017 </option>
	<option value='http://blogs.cisco.com/archive?year=2017&#038;month=01&#038;cat=50'> January 2017 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=12&#038;cat=50'> December 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=11&#038;cat=50'> November 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=10&#038;cat=50'> October 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=09&#038;cat=50'> September 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=08&#038;cat=50'> August 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=07&#038;cat=50'> July 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=06&#038;cat=50'> June 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=05&#038;cat=50'> May 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=04&#038;cat=50'> April 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=03&#038;cat=50'> March 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=02&#038;cat=50'> February 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2016&#038;month=01&#038;cat=50'> January 2016 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=12&#038;cat=50'> December 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=11&#038;cat=50'> November 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=10&#038;cat=50'> October 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=09&#038;cat=50'> September 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=08&#038;cat=50'> August 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=07&#038;cat=50'> July 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=06&#038;cat=50'> June 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=05&#038;cat=50'> May 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=04&#038;cat=50'> April 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=03&#038;cat=50'> March 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=02&#038;cat=50'> February 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2015&#038;month=01&#038;cat=50'> January 2015 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=12&#038;cat=50'> December 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=11&#038;cat=50'> November 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=10&#038;cat=50'> October 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=09&#038;cat=50'> September 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=08&#038;cat=50'> August 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=07&#038;cat=50'> July 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=06&#038;cat=50'> June 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=05&#038;cat=50'> May 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=04&#038;cat=50'> April 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=03&#038;cat=50'> March 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=02&#038;cat=50'> February 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2014&#038;month=01&#038;cat=50'> January 2014 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=12&#038;cat=50'> December 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=11&#038;cat=50'> November 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=10&#038;cat=50'> October 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=09&#038;cat=50'> September 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=08&#038;cat=50'> August 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=07&#038;cat=50'> July 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=06&#038;cat=50'> June 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=05&#038;cat=50'> May 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=04&#038;cat=50'> April 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=03&#038;cat=50'> March 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=02&#038;cat=50'> February 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2013&#038;month=01&#038;cat=50'> January 2013 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=12&#038;cat=50'> December 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=11&#038;cat=50'> November 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=10&#038;cat=50'> October 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=09&#038;cat=50'> September 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=08&#038;cat=50'> August 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=07&#038;cat=50'> July 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=06&#038;cat=50'> June 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=05&#038;cat=50'> May 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=04&#038;cat=50'> April 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=03&#038;cat=50'> March 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=02&#038;cat=50'> February 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2012&#038;month=01&#038;cat=50'> January 2012 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=12&#038;cat=50'> December 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=11&#038;cat=50'> November 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=10&#038;cat=50'> October 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=09&#038;cat=50'> September 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=08&#038;cat=50'> August 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=07&#038;cat=50'> July 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=06&#038;cat=50'> June 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=05&#038;cat=50'> May 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=04&#038;cat=50'> April 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=03&#038;cat=50'> March 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=02&#038;cat=50'> February 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2011&#038;month=01&#038;cat=50'> January 2011 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=12&#038;cat=50'> December 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=11&#038;cat=50'> November 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=10&#038;cat=50'> October 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=09&#038;cat=50'> September 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=08&#038;cat=50'> August 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=07&#038;cat=50'> July 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=06&#038;cat=50'> June 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=05&#038;cat=50'> May 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=04&#038;cat=50'> April 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=03&#038;cat=50'> March 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=02&#038;cat=50'> February 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2010&#038;month=01&#038;cat=50'> January 2010 </option>
	<option value='http://blogs.cisco.com/archive?year=2009&#038;month=12&#038;cat=50'> December 2009 </option>
	<option value='http://blogs.cisco.com/archive?year=2009&#038;month=11&#038;cat=50'> November 2009 </option>
	<option value='http://blogs.cisco.com/archive?year=2009&#038;month=10&#038;cat=50'> October 2009 </option>
	<option value='http://blogs.cisco.com/archive?year=2009&#038;month=09&#038;cat=50'> September 2009 </option>
	<option value='http://blogs.cisco.com/archive?year=2009&#038;month=08&#038;cat=50'> August 2009 </option>
	<option value='http://blogs.cisco.com/archive?year=2009&#038;month=07&#038;cat=50'> July 2009 </option>
	<option value='http://blogs.cisco.com/archive?year=2009&#038;month=06&#038;cat=50'> June 2009 </option>
      </select>
    </div>
    <div class = "clear"></div>
  </div>  
</li>

    <li id="blogroll">
            <ul id="blogroll_links">
          <li class="roll_heading">What We're Reading</li>
                    <li><a href="http://www.cert.org/blogs/vuls/" target="_blank">CERT Vulnerability Analysis</a></li>
                      <li><a href="http://blogs.technet.com/b/srd/" target="_blank">Microsoft Security Research & Defense</a></li>
                      <li><a href="http://isc.sans.edu/index.html" target="_blank">SANS Internet Storm Center</a></li>
                      <li><a href="http://www.schneier.com/" target="_blank">Schneier on Security</a></li>
                  </ul>
              <ul id="related_links">
          <li class="roll_heading">Related Links</li>
                    <li><a href="http://www.cisco.com/en/US/products/products_security_advisories_listing.html" target="_blank">Advisories and Responses</a></li>
                        <li><a href="http://tools.cisco.com/security/center/cyberRiskReport.x" target="_blank">Cyber Risk Reports</a></li>
                        <li><a href="http://tools.cisco.com/security/center/intelliPapers.x?i=55" target="_blank">Security Best Practices</a></li>
                        <li><a href="http://tools.cisco.com/security/center/home.x" target="_blank">Security Intelligence Operations</a></li>
                        <li><a href="http://www.cisco.com/en/US/products/hw/vpndevc/index.html" target="_blank">Security Products</a></li>
                        <li><a href="http://tools.cisco.com/security/center/threatOutbreak.x?i=77" target="_blank">Threat Outbreak Alerts</a></li>
                  </ul>
          </li>
  </ul>	</div>
	<div class = "clear"></div>
</div>
</div> 




</div>
   

<div class="sb-slidebar sb-left sb-width-custom sb-momentum-scrolling " data-sb-width="50%">
    <nav>
  <a class = "hamburger_login" href = "https://blogs.cisco.com:9031/sp/startSSO.ping?PartnerIdpId=cloudsso.cisco.com">Log In to Cisco.com</a>      <ul>
                  <li><a href='http://blogs.cisco.com'><span>All Blogs</span></a></li>
                  <li><a href='#'><span>Technologies</span></a>
                  <ul>
            <div class = "bordertop"></div>
            <li><a href="http://blogs.cisco.com/analytics-automation">Analytics &amp; Automation</a></li>
            <li><a href="http://blogs.cisco.com/cloud">Cloud</a></li>
            <li><a href='http://blogs.cisco.com/collaboration'>Collaboration</a></li>
            <li><a href='http://blogs.cisco.com/datacenter'>Data Center</a></li>
            <li><a href='http://blogs.cisco.com/enterprise'>Enterprise Networks</a></li>
            <li><a href='http://blogs.cisco.com/innovation'>Innovation</a></li>
            <!--<li><a href='http://blogs.cisco.com/openatcisco'>Open at Cisco</a></li>-->
            <li><a href='http://blogs.cisco.com/wireless'>Mobility</a></li>
            <li><a href='http://blogs.cisco.com/security'>Security</a></li>
            <li class = "sub"><a href="http://blogs.cisco.com/talos" class="nav_menu" title="">Threat Research</a></li>
            <li><a href='http://blogs.cisco.com/smallbusiness'>Small Business</a></li>
            <li><a href='http://blogs.cisco.com/sp'>SP360:Service Provider</a></li>
          </ul>
        </li>
                  <li><a href='#'><span>Industries</span></a>
                    
          <ul>
            <div class = "bordertop"></div>
            <li><a href='http://blogs.cisco.com/education'>Education</a></li>
            <li><a href='http://blogs.cisco.com/energy'>Energy</a></li>
            <li><a href='http://blogs.cisco.com/financialservices'>Financial Services</a></li>
            <li><a href='http://blogs.cisco.com/government'>Government</a></li>
            <li><a href='http://blogs.cisco.com/healthcare'>Healthcare</a></li>
            <li><a href='http://blogs.cisco.com/manufacturing'>Manufacturing</a></li>
            <li><a href='http://blogs.cisco.com/retail'>Retail &amp; Hospitality</a></li>
          </ul>
        </li>
                  <li><a href='#'><span>Partners</span></a>         
          <ul>
            <div class = "bordertop"></div>
            <li><a href='http://blogs.cisco.com/partner'>Partner</a></li>
          </ul>
        </li>
        <li><a href='#'><span>For the Tech Expert</span></a>           <ul>
            <div class = "bordertop"></div>
            <li><a href='http://blogs.cisco.com/getyourbuildon'>Architects &amp; Distinguished Engineers</a></li>
            <li><a href='http://blogs.cisco.com/performance'>High Performance Computing</a></li>
            <li><a href='http://blogs.cisco.com/ciscoit'>Inside Cisco IT</a></li>
            <li><a href='http://blogs.cisco.com/cin'>TechWiseTV</a></li>
          </ul>
        </li>
         <li><a href='#'><span>Get to Know Cisco</span></a>           <ul>
            <div class = "bordertop"></div>
            <li><a href='http://blogs.cisco.com/csr'>Corporate Social Responsibility</a></li>
            <li><a href='http://blogs.cisco.com/cle'>Connected Life Exchange</a></li>
            <li><a href='http://blogs.cisco.com/socialmedia'>Digital and Social Media</a></li>
            <li><a href='http://blogs.cisco.com/digital'>Digital Transformation</a></li>
            <li><a href='http://blogs.cisco.com/emerging'>Emerging Countries</a></li>
            <li><a href='http://blogs.cisco.com/gov'>High Tech Policy</a></li>
            <li><a href='http://blogs.cisco.com/diversity'>Inclusion and Diversity</a></li>
            <li><a href='http://blogs.cisco.com/lifeatcisco'>Life at Cisco</a></li>
            <li><a href='http://blogs.cisco.com/perspectives'>Perspectives</a></li>
            <li><a href='http://blogs.cisco.com/news'>The Platform (News &amp; Exec Insights)</a></li>
          </ul>
        </li>
        <li class = "countries"><a href='#'><span>Countries and Regions</span></a>
          <ul>
            <div class = "col_1">
  <li><a href="https://apjc.thecisconetwork.com/">Asia Pacific</a>
    <li><a href="http://gblogs.cisco.com/at/">Austria</a>
  <li><span class = "sub_main">Belgium</span></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/be">Dutch</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/be-fr">French</a></li>
  <li><span class = "sub_main">Canada</span></li>
    <li class = "sub"><a href="http://canadablog.cisco.com/">English</a></li>
    <li class = "sub"><a href="http://ciscocanadafr.wordpress.com/">French</a></li>
  <li><a href="http://gblogs.cisco.com/fin/">Finland</a>
  </div>
    <div class = "col_2">
  <li><span class = "sub_main">France</a></span>
    <li class = "sub"><a href="http://www.cisco.com/c/m/fr_fr/socialmedia/blogs.html">Cisco France Blogs</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-reseaux/">R&#233;seaux</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-datacenter/">Data Center &amp; Cloud</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-iot/">Digital Transformation &amp; IoT</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-collaboration/">Collaboration</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-security/">S&eacute;curit&eacute;</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-sp/">Service Provider</a></li>
    <li class = "sub"><a href="http://gblogs.cisco.com/fr-smartcities/">Smart Cities</a></li>
  
  <li><a href="http://gblogs.cisco.com/de">Germany</a></li>
  <li><a href="http://gblogs.cisco.com/in">India</a></li>
  </div>
  <div class = "col_3">
  <li><a href="http://gblogs.cisco.com/it/">Italy</a></li>   
  <li><a href="http://gblogs.cisco.com/jp/">Japan</a></li>
  <li><a href="http://ciscokrblog.com/">Korea</a></li>
  <li><span class = "sub_main">Latin America</span></li>
      <li class = "sub"><a href="http://gblogs.cisco.com/la/">Latin America (Esp)</a></li>
      <li class = "sub"><a href="http://gblogs.cisco.com/cansac/">Cansac</a></li> 
  </div>
  <div class = "col_4">  
  <li><a href="https://ciscotechblog.nl/">Netherlands</a></li>
  <li><a href="http://gblogs.cisco.com/no">Norway</a></li>
  <li><a href="http://gblogs.cisco.com/pl">Poland</a></li>
  <li><a href="http://gblogs.cisco.com/pt">Portugal</a></li>
  <li><a href="http://gblogs.cisco.com/ro">Romania</a></li>
  <li><a href="http://gblogs.cisco.com/ru">Russia</a></li>
  <li><a href="http://gblogs.cisco.com/es">Spain</a></li>
  <li><a href="http://gblogs.cisco.com/ch-tech/">Switzerland</a></li>
  <li><a href="http://gblogs.cisco.com/uki/">UK &amp; Ireland</a></li>
</div>
<div class = "clear"></div>
</ul>
</li>
      </ul>
</nav></div>
<footer class = "sb-slide">
	<section id = "footer_content">
				<ul id = "footer_social">
			<li class = "footer_social_title">Connect</li>
			
			<li><a target='_blank' href='https://www.facebook.com/ciscosecurity?ref=nf'><img src = "http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/footer_fb.png" height = "25" width = "25"></a></li>
			<li><a target='_blank' href='https://twitter.com/ciscosecurity'><img src = "http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/footer_tw.png"></a></li>
			<li><a target='_blank' href='http://www.linkedin.com/company/cisco'><img src = "http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/footer_li.png"></a></li>
			<li><a target='_blank' href='https://plus.google.com/106092229730683979920'><img src = "http://blogs.cisco.com/wp-content/themes/cisco_responsive/img/footer_gp.png"></a></li>
			<div class = "clear"></div>
			
		</ul>


		<section id="footer_new">
			<ul>
				<li><a href="https://www.cisco.com/web/siteassets/contacts/index.html">Contacts</a>  |  </li>
				<li><a href="https://tools.cisco.com/cdc/feedbk/public/FeedbackAction.cdcfdb">Feedback</a>  |  </li>
				<li><a href="https://www.cisco.com/web/help/index.html">Help</a>  |  </li>
				<li><a href="https://www.cisco.com/web/siteassets/sitemap/index.html">Site Map</a>  |  </li>
				<li><a href="https://www.cisco.com/web/siteassets/legal/terms_condition.html">Terms &amp; Conditions</a>  |  </li>
				<li><a href="https://www.cisco.com/web/siteassets/legal/privacy.html">Privacy Statement</a>  |  </li>
				<li><a href="https://www.cisco.com/web/siteassets/legal/privacy.html#cookies">Cookie Policy</a>  |  </li>
    	 		<li><a href="https://www.cisco.com/web/siteassets/legal/trademark.html">Trademarks</a> <br /> </li>
    	 	</ul>
		</section>
		<br class="clear" />
    	<section id ="disclaimer">
    		<b>Legal Disclaimer</b>
			<p>Some of the individuals posting to this site, including the moderators, work for Cisco Systems. Opinions expressed here and in any corresponding comments are the personal opinions of the original authors, not of Cisco. The content is provided for informational purposes only and is not meant to be an endorsement or representation by Cisco or any other party. This site is available to the public. No information you consider confidential should be posted to this site. By posting you agree to be solely responsible for the content of all information you contribute, link to, or otherwise upload to the Website and release Cisco from any liability related to your use of the Website. You also grant to Cisco a worldwide, perpetual, irrevocable, royalty-free and fully-paid, transferable (including rights to sublicense) right to exercise all copyright, publicity, and moral rights with respect to any original content you provide. The comments are moderated. Comments will appear as soon as they are approved by the moderator.</p>
    	</section>
	</section>
	<script>
var ajaxurl = "https://blogs.cisco.com/wp-admin/admin-ajax.php";
jQuery(document).ready(function($) {
			
	$('a.commentLikeButton').click(function(event){
		var elemId = event.target.id;
		var commentId = elemId.replace('clickLike','');	
		
		event.preventDefault();
		
		var nitroID= $(this).attr("data-nitro");
		
		
		
		var str = $(this).text();
		if (str =='1 like') {
			var total = str.replace('like','');
		}
		else {	
			var total = str.replace('likes','');
		}
		if ($(this).hasClass( "commentlike")) {
			var theTotal = parseInt(total);
   			theTotal1 = Number(theTotal) + 1;
   			if (theTotal1 === 1){
   				$(this).text(theTotal+" like"); 
   			}
   			else {  		
    			$(this).text(theTotal1+" likes"); 
    		} 
    		var data = {
        		'action': 'addLike',
				'commentID': commentId,
				'total': theTotal1
			};
			
			
			$.post(ajaxurl, data, function(response) {
				if (typeof nitroID !== 'undefined') {
					commentLike(nitroID);
				}			
				commentLiked();		
			});
				
    	}
    	else{
    		$(this).removeAttr("href");
    		alert('You already liked this');
    		/*var theTotal = parseInt(total);
   			theTotal = Number(theTotal) - 1;
   			if (theTotal == 1){
   				$(this).text(theTotal+" like"); 
   			}
   			else {  			
    			$(this).text(theTotal+" likes"); 
    		} 
    		var data = {
        		'action': 'removeLike',
				'commentID': commentId,
				'total': theTotal
			};
			$.post(ajaxurl, data, function(response) {
				alert('disliked');
			});*/
    	} 
    	
    	$(this).addClass('commentliked').removeClass('commentlike');
	});
});





	</script>
	
	<script>
		var ajaxurl = "https://blogs.cisco.com/wp-admin/admin-ajax.php";
		
		jQuery(document).ready(function($) {
			var postID = 38237;
			var orig_count = 0;
			$(".twitter a").click(function() {

				var theTotal = orig_count;
   				var count = Number(theTotal) + 1;
				var data = {
        			'action': 'addtweet',
					'postID': postID,
					'total': count
				};
				$.post(ajaxurl, data, function(response){});
			})
		});
	</script>

<script type='text/javascript' src='http://blogs.cisco.com/wp-includes/js/comment-reply.js?ver=4.7.2'></script>
<script type='text/javascript' src='http://blogs.cisco.com/wp-includes/js/wp-embed.js?ver=4.7.2'></script>
</footer>
<script>//nitro.refreshNML();</script>




</body>
</html> 

  <div id="share_bar1">
    
    <span class = "share_title">Share</span>
    <div class="twitter" ><a href="https://twitter.com/intent/tweet?url=http://bit.ly/1FaG4jz&text=Extracting EXE Drop Malware&via=ciscosecurity">tweet</a></div>
    <div class="facebook" data-url="http://blogs.cisco.com/security/extracting-exe-drop-malware" data-title=" "></div>
    <div class="googleplus" data-url="http://blogs.cisco.com/security/extracting-exe-drop-malware"data-title=" "></div>
    <div class="linkedin" data-url="http://blogs.cisco.com/security/extracting-exe-drop-malware" data-title=" "></div>
        <div class = "share_mail"><a class="email" href="mailto:?subject=Cisco Blog: Extracting EXE Drop Malware&body=I saw this post on Cisco Security blog and thought you might like to read it.%0A%0AExtracting EXE Drop Malware%0A%0Ahttp://blogs.cisco.com/security/extracting-exe-drop-malware%0A%0A****Disclaimer****%0A%0ACisco is not responsible for the content of this email, and its contents do not necessarily reflect Cisco’s views or opinions. Cisco has not verified the email address or name of the sender."></a></div>
    <div class = "clear"></div>
  </div>
  <script>
    jQuery(document).ready(function($){



      
      $('.facebook').sharrre({
        share: {
          facebook: true
        },
        enableHover: false,
        enableTracking: true,
        click: function(api, options){
          api.simulateClick();
          api.openPopup('facebook');
        }
      });
      $('.googleplus').sharrre({
        share: {
          googlePlus: true
        },
        enableHover: false,
        enableTracking: true,
        urlCurl: '/wp-content/themes/cisco_responsive/sharrre.php',
        click: function(api, options){
          api.simulateClick();
          api.openPopup('googlePlus');
        }
      });
      $('.linkedin').sharrre({
        share: {
          linkedin: true
        },
        enableHover: false,
        enableTracking: true,
        click: function(api, options){
          api.simulateClick();
          api.openPopup('linkedin');
        }
      });

    });
  </script>
  