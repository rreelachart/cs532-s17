RAW HTML FOR: http://dinaburg.org/bitsquatting.html
<!DOCTYPE html>
<html b:version='2' class='v2' dir='ltr'>
<head>
<meta http-equiv="X-UA-Compatible" content="IE=Edge;chrome=1">
<meta content='width=1100' name='viewport'/>
<meta content='text/html; charset=UTF-8' http-equiv='Content-Type'/>
<meta content='true' name='MSSmartTagsPreventParsing'/>
<meta content='blogger-with-modifications' name='generator'/>
<link href='http://blog.dinaburg.org/favicon.ico' rel='icon' type='image/x-icon'/>
<!--[if IE]><script type="text/javascript" src="http://www.blogger.com/static/v1/jsbin/2846761551-ieretrofit.js"></script>
<![endif]-->
<!--[if IE]> <script> (function() { var html5 = ("abbr,article,aside,audio,canvas,datalist,details," + "figure,footer,header,hgroup,mark,menu,meter,nav,output," + "progress,section,time,video").split(','); for (var i = 0; i < html5.length; i++) { document.createElement(html5[i]); } try { document.execCommand('BackgroundImageCache', false, true); } catch(e) {} })(); </script> <![endif]-->
<title>dinaburg.org</title>
<script type="text/javascript">
if (navigator.userAgent.indexOf('MSIE 6') == -1) {
  WebFontConfig = {
    google: { families: [ 'Consolas' ],
    api: 'http://themes.googleusercontent.com/fonts/css?kit=P1v597nURF-2-CuWR08nQw'
    },
    loading: function() {
      if (window.jstiming) window.jstiming.load.tick('webfontLoading');
    },
    active: function() {
      if (window.jstiming) window.jstiming.load.tick('webfontActive');
    }
  };
  (function() {
    var wf = document.createElement('script');
    wf.src = '//ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';
    wf.type = 'text/javascript';
    wf.async = 'true';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(wf, s);
  })();
} else {
  document.documentElement.className = 'wf-inactive';
}
</script>
<style type="text/css">
.wf-inactive .header h1, .wf-consolas-n4-loading .header h1, .wf-consolas-n4-inactive .header h1 {
  font-family: sans-serif;
}
</style>
<link type='text/css' rel='stylesheet' href='http://dinaburg.org/widget_css_2_bundle.css' />
<style id='page-skin-1' type='text/css'><!--
body {
font: normal normal 16px Arial, Tahoma, Helvetica, FreeSans, sans-serif;
color: #cccccc;
background: #292929 none repeat scroll top left;
padding: 0 40px 40px 40px;
}
html body .region-inner {
min-width: 0;
max-width: 100%;
width: auto;
}
h2 { font-size: 28px; }
h3 { font-size: 24px; }
h4 { font-size: 20px; }
a:link {
text-decoration:none;
color: #dd7700;
}
a:visited {
text-decoration:none;
color: #cc6600;
}
a:hover {
text-decoration:underline;
color: #cc6600;
}
.body-fauxcolumn-outer .fauxcolumn-inner {
background: transparent none repeat scroll top left;
_background-image: none;
}
.body-fauxcolumn-outer .cap-top {
position: absolute;
z-index: 1;
height: 400px;
width: 100%;
background: #292929 none repeat scroll top left;
}
.body-fauxcolumn-outer .cap-top .cap-left {
width: 100%;
background: transparent none repeat-x scroll top left;
_background-image: none;
}
.content-outer {
-moz-box-shadow: 0 0 40px rgba(0, 0, 0, .15);
-webkit-box-shadow: 0 0 5px rgba(0, 0, 0, .15);
-goog-ms-box-shadow: 0 0 10px #333333;
box-shadow: 0 0 40px rgba(0, 0, 0, .15);
margin-bottom: 1px;
}
.content-inner {
padding: 10px 10px;
}
.content-inner {
background-color: #333333;
}
/* Header
----------------------------------------------- */
.header-outer {
background: transparent none repeat-x scroll 0 -400px;
_background-image: none;
}
.Header h1 {
font: normal normal 60px Consolas;
color: #ffffff;
text-shadow: -1px -1px 1px rgba(0, 0, 0, .2);
}
.Header h1 a {
color: #ffffff;
}
.Header .description {
font-size: 140%;
color: #aaaaaa;
}
.header-inner .Header .titlewrapper {
padding: 22px 30px;
}
.header-inner .Header .descriptionwrapper {
padding: 0 30px;
}
/* Tabs
----------------------------------------------- */
.tabs-inner .section:first-child {
border-top: 1px solid #404040;
}
.tabs-inner .section:first-child ul {
margin-top: -1px;
border-top: 1px solid #404040;
border-left: 0 solid #404040;
border-right: 0 solid #404040;
}
.tabs-inner .widget ul {
background: #222222 none repeat-x scroll 0 -800px;
_background-image: none;
border-bottom: 1px solid #404040;
margin-top: 0;
margin-left: -30px;
margin-right: -30px;
}
.tabs-inner .widget li a {
display: inline-block;
padding: .6em 1em;
font: normal normal 16px Arial, Tahoma, Helvetica, FreeSans, sans-serif;
color: #999999;
border-left: 1px solid #333333;
border-right: 0 solid #404040;
}
.tabs-inner .widget li:first-child a {
border-left: none;
}
.tabs-inner .widget li.selected a, .tabs-inner .widget li a:hover {
color: #ffffff;
background-color: #000000;
text-decoration: none;
}
/* Columns
----------------------------------------------- */
.main-outer {
border-top: 0 solid #404040;
}
.fauxcolumn-left-outer .fauxcolumn-inner {
border-right: 1px solid #404040;
}
.fauxcolumn-right-outer .fauxcolumn-inner {
border-left: 1px solid #404040;
}
/* Headings
----------------------------------------------- */
h2 {
margin: 0 0 1em 0;
font: normal bold 11px Arial, Tahoma, Helvetica, FreeSans, sans-serif;
color: #ffffff;
text-transform: uppercase;
}
/* Widgets
----------------------------------------------- */
.widget .zippy {
color: #999999;
text-shadow: 2px 2px 1px rgba(0, 0, 0, .1);
}
.widget .popular-posts ul {
list-style: none;
}
/* Posts
----------------------------------------------- */
.date-header span {
background-color: transparent;
color: #cccccc;
padding: inherit;
letter-spacing: inherit;
margin: inherit;
}
.main-inner {
padding-top: 30px;
padding-bottom: 30px;
}
.main-inner .column-center-inner {
padding: 0 15px;
}
.main-inner .column-center-inner .section {
margin: 0 15px;
}
.post {
margin: 0 0 25px 0;
}
h3.post-title, .comments h4 {
font: normal normal 30px Arial, Tahoma, Helvetica, FreeSans, sans-serif;
margin: .75em 0 0;
}
.post-body {
font-size: 110%;
line-height: 1.4;
position: relative;
}
.post-body img, .post-body .tr-caption-container, .Profile img, .Image img,
.BlogList .item-thumbnail img {
padding: 0;
background: #111111;
border: 1px solid #111111;
-moz-box-shadow: 1px 1px 5px rgba(0, 0, 0, .1);
-webkit-box-shadow: 1px 1px 5px rgba(0, 0, 0, .1);
box-shadow: 1px 1px 5px rgba(0, 0, 0, .1);
}
.post-body img, .post-body .tr-caption-container {
padding: 1px;
}
.post-body .tr-caption-container {
color: #cccccc;
}
.post-body .tr-caption-container img {
padding: 0;
background: transparent;
border: none;
-moz-box-shadow: 0 0 0 rgba(0, 0, 0, .1);
-webkit-box-shadow: 0 0 0 rgba(0, 0, 0, .1);
box-shadow: 0 0 0 rgba(0, 0, 0, .1);
}
.post-header {
margin: 0 0 1.5em;
line-height: 1.6;
font-size: 90%;
}
.post-footer {
margin: 20px -2px 0;
padding: 5px 10px;
color: #888888;
background-color: #303030;
border-bottom: 1px solid #444444;
line-height: 1.6;
font-size: 90%;
}
#comments .comment-author {
padding-top: 1.5em;
border-top: 1px solid #404040;
background-position: 0 1.5em;
}
#comments .comment-author:first-child {
padding-top: 0;
border-top: none;
}
.avatar-image-container {
margin: .2em 0 0;
}
#comments .avatar-image-container img {
border: 1px solid #111111;
}
/* Accents
---------------------------------------------- */
.section-columns td.columns-cell {
border-left: 1px solid #404040;
}
.blog-pager {
background: transparent none no-repeat scroll top center;
}
.blog-pager-older-link, .home-link,
.blog-pager-newer-link {
background-color: #333333;
padding: 5px;
}
.footer-outer {
border-top: 0 dashed #bbbbbb;
}
/* Mobile
----------------------------------------------- */
body.mobile  {
background-size: auto;
}
.mobile .body-fauxcolumn-outer {
background: transparent none repeat scroll top left;
}
.mobile .body-fauxcolumn-outer .cap-top {
background-size: 100% auto;
}
.mobile .content-outer {
-webkit-box-shadow: 0 0 3px rgba(0, 0, 0, .15);
box-shadow: 0 0 3px rgba(0, 0, 0, .15);
padding: 0 40px;
}
body.mobile .AdSense {
margin: 0 -40px;
}
.mobile .tabs-inner .widget ul {
margin-left: 0;
margin-right: 0;
}
.mobile .post {
margin: 0;
}
.mobile .main-inner .column-center-inner .section {
margin: 0;
}
.mobile .date-header span {
padding: 0.1em 10px;
margin: 0 -10px;
}
.mobile h3.post-title {
margin: 0;
}
.mobile .blog-pager {
background: transparent none no-repeat scroll top center;
}
.mobile .footer-outer {
border-top: none;
}
.mobile .main-inner, .mobile .footer-inner {
background-color: #333333;
}
.mobile-index-contents {
color: #cccccc;
}
.mobile-link-button {
background-color: #dd7700;
}
.mobile-link-button a:link, .mobile-link-button a:visited {
color: #ffffff;
}
.mobile .tabs-inner .section:first-child {
border-top: none;
}
.mobile .tabs-inner .PageList .widget-content {
background-color: #000000;
color: #ffffff;
border-top: 1px solid #404040;
border-bottom: 1px solid #404040;
}
.mobile .tabs-inner .PageList .widget-content .pagelist-arrow {
border-left: 1px solid #404040;
}
.tabs-inner .PageList li a {border-right:1px solid grey;}
.Header h1 {margin-bottom:0;}
.Header .description {margin-top: 0;}
.header-inner .Header .titlewrapper {padding-left: 0; padding-bottom:0;}
.Attribution {visibility: hidden;}
--></style>
<style id='template-skin-1' type='text/css'><!--
body {
min-width: 960px;
}
.content-outer, .content-fauxcolumn-outer, .region-inner {
min-width: 960px;
max-width: 960px;
_width: 960px;
}
.main-inner .columns {
padding-left: 0px;
padding-right: 0px;
}
.main-inner .fauxcolumn-center-outer {
left: 0px;
right: 0px;
/* IE6 does not respect left and right together */
_width: expression(this.parentNode.offsetWidth -
parseInt("0px") -
parseInt("0px") + 'px');
}
.main-inner .fauxcolumn-left-outer {
width: 0px;
}
.main-inner .fauxcolumn-right-outer {
width: 0px;
}
.main-inner .column-left-outer {
width: 0px;
right: 100%;
margin-left: -0px;
}
.main-inner .column-right-outer {
width: 0px;
margin-right: -0px;
}
#layout {
min-width: 0;
}
#layout .content-outer {
min-width: 0;
width: 800px;
}
#layout .region-inner {
min-width: 0;
width: auto;
}
--></style>
</head>
<body class='loading'>

<!-- keep! -->
<div class='navbar section' id='navbar'>
</div>
<!-- keep! -->

<div class='content'>
<div class='content-outer'>
<div class='fauxborder-left content-fauxborder-left'>
<div class='content-inner'>
<header>
<div class='header-outer'>
<div class='fauxborder-left header-fauxborder-left'>
<div class='region-inner header-inner'>
<div class='header section' id='header'><div class='widget Header' id='Header1'>
<div id='header-inner'>
<div class='titlewrapper'>
<h1 class='title'>
<a href='http://blog.dinaburg.org/'>dinaburg.org</a>
</h1>
</div>
<div class='descriptionwrapper'>
<p class='description'><span>... because I needed a web presence</span></p>
</div>
</div>
</div></div>
</div>
</div>
</div>
</header>
<div class='tabs-outer'>
<div class='fauxborder-left tabs-fauxborder-left'>
<div class='region-inner tabs-inner'>
<div class='tabs section' id='crosscol'><div class='widget PageList' id='PageList1'>
<h2>Pages</h2>
<div class='widget-content'>
<ul>
<li><a href="//blog.dinaburg.org">Blog</a></li>
<li><a href="projects.html">Projects</a></li>
<li><a href="about.html">About</a></li>
</ul>
</div>
</div></div>
</div>
</div>
</div>
<div class='main-outer'>
<div class='fauxborder-left main-fauxborder-left'>
<div class='region-inner main-inner'>
<div class='columns fauxcolumns'>
<!-- corrects IE6 width calculation -->
<div class='columns-inner'>
<div class='column-center-outer'>
<div class='column-center-inner'>
<div class='main section' id='main'><div class='widget Blog' id='Blog1'>
<div class='blog-posts hfeed'>
<!-- google_ad_section_start(name=default) -->

          <div class="date-outer">
        

          <div class="date-posts">
        
<div class='post-outer'>
<div class='post hentry' itemscope='itemscope' itemtype='http://schema.org/BlogPosting'>

<h3 class='post-title entry-title' itemprop='name'>
Bitsquatting: DNS Hijacking without exploitation<br/>
<br/>
</h3>
<div class='post-body entry-content' itemprop='articleBody'>
		<div dir="ltr" style="text-align: left;" trbidi="on">

<style>
table.centered
{
    border-collapse:collapse;
}
table.centered,th, td
{
    border: 1px solid black;
}
table.centered
{
    text-align: center;
    margin-left: auto;
    margin-right: auto;
}
th
{
    background: #292929;
}
td
{
    padding-left:3px;
    padding-right:3px;
}
</style>
Bitsquatting refers to the registration of a domain names one bit different than a popular domain. The name comes from typosquatting: the act of registering domain names one key press different than a popular domain. Bitsquatting frequently resolved domain names makes it possible to exploit computer hardware errors via DNS. For more details on bitsquatting my research, please see my <a href="http://media.blackhat.com/bh-us-11/Dinaburg/BH_US_11_Dinaburg_Bitsquatting_WP.pdf">Blackhat 2011 whitepaper</a>. Someone has posted a <a href="http://www.youtube.com/watch?v=lZ8s1JwtNas">youtube video</a> of my DEFCON 19 talk about this topic. The slides from my DEFCON 19 talk are also <a href="data/DC19_Dinaburg_Presentation.pdf">available</a>.

<p/>
<h3>Introduction</h3>
Computers suffer from errors that manifest as memory corruption of one or more bits. The causes of these errors range from manufacturing defects to environmental factors such as cosmic rays and overheating. While the probability of a single error is minuscule, the amount of Internet-connected hardware is extremely large: there were approximately 5 billion devices connected to the Internet in 2010. The best way to conceptualize a small probability distributed over many rounds is to think of a lottery. The odds of winning the jackpot are infinitesimally small, but given enough players someone will win.

<p/>
Researchers have exploited bit-errors before in <a href="https://www.cs.princeton.edu/~appel/papers/memerr.pdf">amazing ways</a>. But bit-errors can be detected and exploited in new ways on an Internet-wide scale. One of these means is by bitsquatting, or registering domain names one bit different than frequently resolved domains.

<p/>
<h3>Theory of Operation</h3>
When bit-errors occur they can change memory content. Computer memory content has semantic meaning. Sometimes, that meaning will be a domain name. And applications utilizing that memory will use the wrong domain name.
<p/>

An example can illustrate this more clearly. The following is a binary representation of cnn.com:
<pre>
<table class="centered">
<tr>
    <td>01100011</td> <td>01101110</td> <td>01101110</td> <td>0101110</td> <td>01100011</td> <td>01101111</td> <td>01101101</td>
</tr>
<tr>
    <td>c</td><td>n</td><td>n</td><td>.</td><td>c</td><td>o</td><td>m</td>
</tr>
</table>
</pre>
Lets suppose you are using a computer with a bad memory module. You browse to a page (like this one) with a link to <a href="http://cnn.com">cnn.com</a>. You click the link. How many times is the binary representation of cnn.com copied in your computer's memory? 

As I am writing this, I can think of several:
<p/>
<ul>
    <li> by the TCP/IP stack from kernel to user mode [varies by implementation]</li>
    <li> by your browser when it parses HTML</li>
    <li> ... and when it creates an internal representation of the DOM tree</li>
    <li> ... and when it creates a new HTTP request</li>
    <li> by your OS APIs during domain resolution</li>
</ul>
<p/>

<p/>

Lets further suppose one of these copy operations writes to the faulty memory module. The binary representation changes by one bit. It now represents con.com.
<p/>
<pre>
<table class="centered">
<tr>
    <td>01100011</td> <td>0110111<font style="color: #FF0000;">1</font></td> <td>01101110</td> <td>0101110</td> <td>01100011</td> <td>01101111</td> <td>01101101</td>
</tr>
<tr>
    <td>c</td><td>o</td><td>n</td><td>.</td> <td>c</td> <td>o</td> <td>m</td>
</tr>
</table>
</pre>
<p/>

Upon clicking the link your browser will navigate to con.com instead of cnn.com.
<p/>

<h3>Experiment</h3>

The concept behind the experiment is simple: if bit-errors are indeed mutating domain names in device memory, then these devices must resolve and connect to these bitsquat domains. Therefore bitsquats of frequently resolved domains should be visited by devices around the world.
<p/>

Execution of the experiment is not so simple. First is the problem of choosing domains to bitsquat. There is a difference between popular websites and frequently resolved domains. There are many frequently resolved domains that few people type or know. These domains belong to the content delivery and advertising networks of the Internet; domains such as fbcdn.net, 2mdn.net, and akamai.com. Content delivery and ad domains also make the best experimental targets as these domains are extremely unlikely to be typed by people. Second, every DNS query must be answered with two answers: one for the original domain and one for the bitsquat domain. This is because the original requestor may be requesting a response for the original name, and will discard responses for invalid domains. For more on this, please read the <a href="http://media.blackhat.com/bh-us-11/Dinaburg/BH_US_11_Dinaburg_Bitsquatting_WP.pdf">whitepaper</a> or look at the <a href="data/DC19_Dinaburg_Presentation.pdf">slides</a>.
<p/>

For my experiment I registered the following domains. Note: the registration for these has since expired and they are no longer owned by me. 
<pre>
<table class="centered">
<tr><th>Bitsquat Domain</th> <th>Original Domain</th></tr>
<tr><td>ikamai.net</td> <td>akamai.net</td></tr>
<tr><td>aeazon.com</td> <td>amazon.com</td></tr>
<tr><td>a-azon.com</td> <td>amazon.com</td></tr>
<tr><td>amazgn.com</td> <td>amazon.com</td></tr>
<tr><td>microsmft.com</td> <td>microsoft.com</td></tr>
<tr><td>micrgsoft.com</td> <td>microsoft.com</td></tr>
<tr><td>miarosoft.com</td> <td>microsoft.com</td></tr>
<tr><td>iicrosoft.com</td> <td>microsoft.com</td></tr>
<tr><td>microsnft.com</td> <td>microsoft.com</td></tr>
<tr><td>mhcrosoft.com</td> <td>microsoft.com</td></tr>
<tr><td>eicrosoft.com</td> <td>microsoft.com</td></tr>
<tr><td>mic2osoft.com</td> <td>microsoft.com</td></tr>
<tr><td>micro3oft.com</td> <td>microsoft.com</td></tr>
<tr><td>li6e.com</td> <td>live.com</td></tr>
<tr><td>0mdn.net</td> <td>2mdn.net</td></tr>
<tr><td>2-dn.net</td> <td>2mdn.net</td></tr>
<tr><td>2edn.net</td> <td>2mdn.net</td></tr>
<tr><td>2ldn.net</td> <td>2mdn.net</td></tr>
<tr><td>2mfn.net</td> <td>2mdn.net</td></tr>
<tr><td>2mln.net</td> <td>2mdn.net</td></tr>
<tr><td>2odn.net</td> <td>2mdn.net</td></tr>
<tr><td>6mdn.net</td> <td>2mdn.net</td></tr>
<tr><td>fbbdn.net</td> <td>fbcdn.net</td></tr>
<tr><td>fbgdn.net</td> <td>fbcdn.net</td></tr>
<tr><td>gbcdn.net</td> <td>fbcdn.net</td></tr>
<tr><td>fjcdn.net</td> <td>fbcdn.net</td></tr>
<tr><td>dbcdn.net</td> <td>fbcdn.net</td></tr>
<tr><td>roop-servers.net</td> <td>root-servers.net</td></tr>
<tr><td>doublechick.net</td> <td>doubleclick.net</td></tr>
<tr><td>do5bleclick.net</td> <td>doubleclick.net</td></tr>
</table>
</pre>
<p/>

I used a Python script to answer DNS queries and Apache to log incoming HTTP requests and waited for connections. And to my surprise, devices connected.
<p/>

<h3>Experimental Findings</h3>

The following findings are based on my Apache logs from September 26, 2010 to May 5, 2011. Log entries due to search engine crawlers and web-app vulnerability scans were manually filtered. As the process was manual, some crawler/scanner requests may still be counted in these statistics. 
<p/>

<h4>Finding 1: Bit-errors can be exploited via DNS</h4>

During the logging period there were a total of <b>52,317</b> bitsquat requests from <b>12,949</b> unique IP addresses. When not counting 3 events that caused extraordinary amounts of traffic, an average of <b>59</b> unique IPs per day made HTTP requests to my 32 bitsquat domains. These requests were not typos or other manually entered URLs, and some show signs of several bit errors. Here are some actual examples (with personal data removed):
<p/>

<pre>static.ak.fjcdn.net 109.242.50.xxx "GET /rsrc.php/z67NS/hash/4ys0envq.js HTTP/1.1" "http://www.facebook.com/profile.php?id=xxxxxxxxxx" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; WOW64; Trident/4.0; GTB6.5; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.30729; .NET CLR 3.5.30729; InfoPath.2; Hotbar 11.0.78.0; OfficeLiveConnector.1.5; OfficeLivePatch.1.3; AskTbZTV/5.8.0.12304)"</pre>
<pre>msgr.dlservice.mic2osoft.com 213.178.224.xxx "GET /download/A/6/1/A616CCD4-B0CA-4A3D-B975-3EDB38081B38/ar/wlsetup-cvr.exe HTTP/1.1" 404 268 "Microsoft BITS/6.6"</pre>
<pre>s0.2ldn.net 66.82.9.xxx "GET /879366/flashwrite_1_2.js HTTP/1.1" "http://webmail.satx.rr.com/_uac/adpage.html" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; HPNTDF; AskTB5.2)"</pre>
<pre>mmv.admob.com 109.175.185.xxx "GET /static/iphone/img/app@2x.png HTTP/1.1" "Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_1 like Mac OS X; HW iPhone2,1; en_gb) AppleWebKit/525.18.1 (KHTML, like Gecko) (AdMob-iSDK-20101108; iphoneos4.2)"</pre>

<h4>Finding 2: Not all bit-errors are created equal</h4>

Some machines control considerably more traffic than others. While a bit-error in the memory of a PC or phone will only affect one user, a bit-error in a proxy, recursive DNS server, or a database cache may affect thousands of users. Bit-errors in web application caches, DNS resolvers, and a proxy server were all observed in my experiment. For instance, a bit error changing fbcdn.net to fbbdn.net led to more than a thousand Farmville players to make requests to my server.
<p/>

<h4>Finding 3: Mobile and embedded devices may be more affected than traditional hardware</h4>

The following graphic shows a comparison of HTTP User-Agents from visitors to Wikipedia during March of 2011 to User-Agents visiting my bitsquat domains. The "other" column, which includes various phones, game consoles, and other embedded devices was considerably more prevalent in the bitsquat visitors. Curiously the are considerably fewer MacOS User-Agents visiting bitsquat domains than there were visiting Wikipedia. I do not have an explanation as to why this is so.
<p/>
<img style="display:block; margin-left:auto; margin-right: auto;" src="img/bitsquat_ua.png"/>
<p/>

<h4>Finding 4: Bitsquat traffic represents a slice of normal traffic</h4>

The visitors to my bitsquat domains came from all over the world and included every major operating system and embedded platform. While there were considerable differences in the percentage of visitors using MacOS and mobile platforms, the percentage of visitors using Windows, Linux, Android and iPhones was approximately the same as that of Wikipedia visitors. Additionally for the visitors determined to be in United States via a geoip database, a diurnal pattern corresponding to computer use can be observed.
<p/>
<img style="display:block; margin-left:auto; margin-right: auto;" src="img/bitsquat_diurnal.png"/>
<p/>

<h4>Finding 5: HTTPS/TLS will not help. DNSSEC will help a tiny bit.</h4>

HTTP 1.1 includes a header field called <span style="font-family: Courier New, Courier, monospace;">Host</span>. This field is populated with the domain the client thinks it connected to. If the Host header contains the bitsquat domain, then a bit error occurred before domain resolution. If the Host header contains the original domain, the error occurred during domain resolution. In 96% of the cases, the bit-error had occurred <b>prior to DNS resolution</b>. 
<p/>
<img style="display:block; margin-left:auto; margin-right: auto;" src="img/bitsquat_hostheader.png"/>
<p/>
Transport security technologies such as SSL and TLS are designed to protect the confidentiality, authenticity and integrity of data moving between two nodes. Bit-errors most frequently happen to data when it is "at rest" on one of the nodes. DNSSEC will only resolve the 4% of the cases where a bit error occurred in the resolution process.
<p/>

<h3>The Data</h3>
The PCAPs of all DNS traffic are available here: (<a href="data/dnslogs.tar.7z">dnslogs.tar.7z</a>, 56Mb, <a href="http://www.7-zip.org/">7zip</a> compressed) 
<br/>
The HTTP log entries may contain personal information of random people and hence will not be publicly released. If you have legitimate research interest in the HTTP logs, please <a href="about.html">contact me</a>.
<p/>
A tool for quick identification of potential bitsqat domains is avilable here: (<a href="data/bitsquat.py">bitsquat.py</a>, <a href="https://github.com/artemdinaburg/bitsquat-script">github</a>)
<p/>

<h3>Further research</h3>
Duane Wessels of Verisign looked for evidence of network level bit-errors in DNS queries as seen at domain roots. His findings indicate "<a href="http://www.verisigninc.com/assets/VRSN_Bitsquatting_TR_20120320.pdf">that bit-level errors in the <b>network</b> are relatively rare and occur at an expected rate</a>." (emphasis mine). The goal of his research was to determine if the 4% of requests with a non-bitsquat Host header were due to corruption of UDP packets after transmission. The final determination was that the packets were very unlikely to be corrupted during transmission on the network. In his own words: "We believe that UDP checksums are effective at preventing 'bitsquat' attacks and other types of errors that occur after a DNS query leaves a DNS resolver and enters the network. Bitsquat errors that occur prior to entering the network, however, will not benefit from UDP checksums since the sender calculates its checksum over the erroneous data."

<p/>
I fully encourage anyone reading this to replicate my experiments and share their findings. If you would like more information, please feel free to <a href="about.html">contact me</a>. 

		</div>
		<div style='clear: both;'></div>
</div>
</div>


</div>

        </div></div>
      
<!-- google_ad_section_end -->
</div>
</div></div>
</div>
</div>
</div>
<!-- columns -->
</div>
<!-- main -->
</div>
</div>
</div>
</div>
</div>
</body>
</html>
